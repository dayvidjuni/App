package com.example.cuy.pantallaDuelo

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.offset
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.compose.ui.text.font.Font
import androidx.compose.ui.text.font.FontFamily
import androidx.compose.ui.text.style.TextAlign
import com.example.cuy.R
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.ui.draw.clip
import androidx.compose.ui.res.painterResource


val OxaniumFont = FontFamily(
    Font(R.font.oxanium_regular, FontWeight.Normal)
)

@Composable
fun PantallaJuego() {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(Color(0xFFFAD78E))
            .padding(start = 20.dp, end = 20.dp, bottom = 20.dp, top = 30.dp)
    )
    {
        // Fila superior: botón atrás, espacio, íconos derecha
        Row(
            modifier = Modifier
                .fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            // Botón atrás
            Image(
                painter = painterResource(id = R.drawable.boton_atras),
                contentDescription = "Atrás",
                modifier = Modifier
                    .height(50.dp)
                    .width(50.dp)
            )

            // Íconos configuración y casa
            Row(
                verticalAlignment = Alignment.CenterVertically
            ) {
                Image(
                    painter = painterResource(id = R.drawable.configuracion),
                    contentDescription = "Configuración",
                    modifier = Modifier
                        .height(50.dp)
                        .width(50.dp)
                        .padding(end = 12.dp)
                )
                Image(
                    painter = painterResource(id = R.drawable.casa),
                    contentDescription = "Inicio",
                    modifier = Modifier
                        .height(32.dp)
                        .width(32.dp)
                )
            }
        }
        //Spacer(modifier = Modifier.height(4.dp))

        // Logo
        Box(
            modifier = Modifier
                .fillMaxWidth()
                .offset(y = (-50).dp), // Ajusta este valor a lo que necesites
            contentAlignment = Alignment.TopCenter
        ) {
            Image(
                painter = painterResource(id = R.drawable.logo_cuy),
                contentDescription = "Logo del Cuy",
                modifier = Modifier
                    .height(170.dp)
                    .width(170.dp)
            )
        }

        Spacer(modifier = Modifier.height(50.dp))

        // Pregunta
        Text(
            text = "A small, red fruit often used in desserts and has tiny seeds on its surface.",
            fontSize = 24.sp,
            fontFamily = OxaniumFont,
            fontWeight = FontWeight.Bold,
            modifier = Modifier
                .fillMaxWidth()
                .clip(RoundedCornerShape(24.dp))
                .background(Color(0xFF7A3E3E))
                .padding(40.dp),
            color = Color.White,
            textAlign = TextAlign.Center
        )

        Spacer(modifier = Modifier.height(32.dp))

        // Botones de opciones (2x2)
        Column(
            modifier = Modifier.fillMaxWidth(),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Row(
                modifier = Modifier.fillMaxWidth(0.8f),
                horizontalArrangement = Arrangement.SpaceBetween
            ) {
                OpcionBoton("Strawberry")
                OpcionBoton("dessert")
            }
            Spacer(modifier = Modifier.height(16.dp))
            Row(
                modifier = Modifier.fillMaxWidth(0.8f),
                horizontalArrangement = Arrangement.SpaceBetween
            ) {
                OpcionBoton("apple")
                OpcionBoton("shortcake")
            }
        }

        Spacer(modifier = Modifier.weight(1f))
    }
}


@Composable
fun OpcionBoton(texto: String) {
    Button(
        onClick = { /* acción futura */ },
        colors = ButtonDefaults.buttonColors(
            containerColor = Color(0xFF7A3E3E),
            contentColor = Color.White
        ),
        modifier = Modifier
            .width(140.dp)
            .height(60.dp)
    ) {
        Text(
            texto,
            fontFamily = OxaniumFont
        )
    }
